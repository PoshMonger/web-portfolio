[{"/Users/bubbajo/Desktop/React/web-portfolio/src/index.js":"1","/Users/bubbajo/Desktop/React/web-portfolio/src/App.js":"2","/Users/bubbajo/Desktop/React/web-portfolio/src/reportWebVitals.js":"3","/Users/bubbajo/Desktop/React/web-portfolio/src/components/Footer.js":"4","/Users/bubbajo/Desktop/React/web-portfolio/src/components/Projects.js":"5","/Users/bubbajo/Desktop/React/web-portfolio/src/components/Skills.js":"6","/Users/bubbajo/Desktop/React/web-portfolio/src/components/Contact.js":"7","/Users/bubbajo/Desktop/React/web-portfolio/src/components/ProjectCard.js":"8","/Users/bubbajo/Desktop/React/web-portfolio/src/components/Banner/Banner.js":"9","/Users/bubbajo/Desktop/React/web-portfolio/src/components/NavBar/NavBar.js":"10"},{"size":535,"mtime":1658433909164,"results":"11","hashOfConfig":"12"},{"size":594,"mtime":1732225056786,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1658433909165,"results":"14","hashOfConfig":"12"},{"size":1146,"mtime":1732225222963,"results":"15","hashOfConfig":"12"},{"size":6319,"mtime":1732225364663,"results":"16","hashOfConfig":"12"},{"size":32312,"mtime":1732242707895,"results":"17","hashOfConfig":"12"},{"size":3706,"mtime":1659128841890,"results":"18","hashOfConfig":"19"},{"size":997,"mtime":1732225373570,"results":"20","hashOfConfig":"12"},{"size":3929,"mtime":1732242645808,"results":"21","hashOfConfig":"12"},{"size":2862,"mtime":1732225353881,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13byucm",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1ecwn7e",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bubbajo/Desktop/React/web-portfolio/src/index.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/App.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/reportWebVitals.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/Footer.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/Projects.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/Skills.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/Contact.js",["54"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport TrackVisibility from 'react-on-screen';\nimport { Button } from \"react-bootstrap\";\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"https://nodemailerforportfolio.herokuapp.com/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: 'Message sent successfully'});\n    } else {\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"contact\">\n      <Container className='contact-form'>\n        <Col className='contact-header-cont' size={12}>  <h2>Get In Touch</h2></Col>\n    \n        <Row className='contact-main-cont'>\n         \n          <Col   xs={12}  sm={12} md={8}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div  >\n               \n                <form  onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} xs={6} md={12} lg={12} xl={12} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6  } xs={6}  md={12} lg={12} xl={12} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lastName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} xs={6}  className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} xs={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col  size={6} sm={12} xs={12}  md={12} lg={12} xl={12}  >\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                     \n                    </Col>\n                    <Col className='contact-button-cont' xs={6} sm={6} md={12} lg={12} xl={12}>\n                    <Button type=\"submit\"><span>{buttonText}</span></Button>\n                    {\n                      status.message &&\n\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                     \n                    }\n                    </Col>\n\n                   \n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/bubbajo/Desktop/React/web-portfolio/src/components/ProjectCard.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/Banner/Banner.js",[],[],"/Users/bubbajo/Desktop/React/web-portfolio/src/components/NavBar/NavBar.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":39,"column":21,"nodeType":"57","messageId":"58","endLine":39,"endColumn":23},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]