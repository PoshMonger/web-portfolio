{"ast":null,"code":"export default function BrickCollision(circle, rect) {\n  var distX = Math.abs(circle.x - rect.x - rect.width / 2);\n  var distY = Math.abs(circle.y - rect.y - rect.height / 2);\n\n  if (distX > rect.width / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false\n    };\n  }\n\n  if (distY > rect.height / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false\n    };\n  }\n\n  if (distX <= rect.width / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"Y\"\n    };\n  }\n\n  if (distY <= rect.height / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"X\"\n    };\n  } // also test for corner collisions\n\n\n  var dx = distX - rect.width / 2;\n  var dy = distY - rect.height / 2; // return dx * dx + dy * dy <= circle.rad * circle.rad;\n\n  return {\n    hit: dx * dx + dy * dy <= circle.rad * circle.rad,\n    axis: \"X\"\n  };\n}\n_c = BrickCollision;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrickCollision\");","map":{"version":3,"names":["BrickCollision","circle","rect","distX","Math","abs","x","width","distY","y","height","rad","hit","axis","dx","dy"],"sources":["/Users/bubbajo/Desktop/web-portfolio/src/components/breakout/util/BrickCollision.js"],"sourcesContent":["export default function BrickCollision(circle, rect) {\n  var distX = Math.abs(circle.x - rect.x - rect.width / 2);\n  var distY = Math.abs(circle.y - rect.y - rect.height / 2);\n\n  if (distX > rect.width / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false,\n    };\n  }\n  if (distY > rect.height / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false,\n    };\n  }\n\n  if (distX <= rect.width / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"Y\",\n    };\n  }\n  if (distY <= rect.height / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"X\",\n    };\n  }\n\n  // also test for corner collisions\n  var dx = distX - rect.width / 2;\n  var dy = distY - rect.height / 2;\n  // return dx * dx + dy * dy <= circle.rad * circle.rad;\n  return {\n    hit: dx * dx + dy * dy <= circle.rad * circle.rad,\n    axis: \"X\",\n  };\n}\n"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAsC;EACnD,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAM,CAACK,CAAP,GAAWJ,IAAI,CAACI,CAAhB,GAAoBJ,IAAI,CAACK,KAAL,GAAa,CAA1C,CAAZ;EACA,IAAIC,KAAK,GAAGJ,IAAI,CAACC,GAAL,CAASJ,MAAM,CAACQ,CAAP,GAAWP,IAAI,CAACO,CAAhB,GAAoBP,IAAI,CAACQ,MAAL,GAAc,CAA3C,CAAZ;;EAEA,IAAIP,KAAK,GAAGD,IAAI,CAACK,KAAL,GAAa,CAAb,GAAiBN,MAAM,CAACU,GAApC,EAAyC;IACvC;IACA,OAAO;MACLC,GAAG,EAAE;IADA,CAAP;EAGD;;EACD,IAAIJ,KAAK,GAAGN,IAAI,CAACQ,MAAL,GAAc,CAAd,GAAkBT,MAAM,CAACU,GAArC,EAA0C;IACxC;IACA,OAAO;MACLC,GAAG,EAAE;IADA,CAAP;EAGD;;EAED,IAAIT,KAAK,IAAID,IAAI,CAACK,KAAL,GAAa,CAA1B,EAA6B;IAC3B;IACA,OAAO;MACLK,GAAG,EAAE,IADA;MAELC,IAAI,EAAE;IAFD,CAAP;EAID;;EACD,IAAIL,KAAK,IAAIN,IAAI,CAACQ,MAAL,GAAc,CAA3B,EAA8B;IAC5B;IACA,OAAO;MACLE,GAAG,EAAE,IADA;MAELC,IAAI,EAAE;IAFD,CAAP;EAID,CA9BkD,CAgCnD;;;EACA,IAAIC,EAAE,GAAGX,KAAK,GAAGD,IAAI,CAACK,KAAL,GAAa,CAA9B;EACA,IAAIQ,EAAE,GAAGP,KAAK,GAAGN,IAAI,CAACQ,MAAL,GAAc,CAA/B,CAlCmD,CAmCnD;;EACA,OAAO;IACLE,GAAG,EAAEE,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,IAAqBd,MAAM,CAACU,GAAP,GAAaV,MAAM,CAACU,GADzC;IAELE,IAAI,EAAE;EAFD,CAAP;AAID;KAxCuBb,c"},"metadata":{},"sourceType":"module"}